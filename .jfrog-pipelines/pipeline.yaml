valuesFilePath: ./values.yaml

resources:
  - name: {{ .Values.var.resourceName }}
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.var.gitProvider }}
      path: {{ .Values.var.path }}
      branches:
        include: {{ .Values.var.branches }}

pipelines:
  - name: {{ .Values.var.pipelineName }}
    preRun:
      execution:
        onExecute:
          - echo "Executing Pre Run"
          #- set_run_name "$res_mvn_artifact_4_event_path"
          #- update_run_description "Triggered on Event $res_mvn_artifact_4_event_type for Artifact $res_mvn_artifact_4_event_path"
    postRun:
      execution:
        onExecute:
          - echo "Executing Post Run"
    configuration:
      nodePool: default-dynamic-nodepool
    steps:
      - name: sample_step
        type: Bash
        #configuration:
          #inputResources:
          #  - name: src_repo
        execution:
          onStart: #being the main execution
            - echo "Preparing for work..."
          onExecute: #main()
            - echo "executing task command 1"
            - echo "executing task command 2"
          onSuccess: #only if main execution succeeds
            - echo "Job well done!"
          onFailure: ##only if main execution fails
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
            - set_run_name "v$run_number"
            - update_run_description "Custom Triggered by $step_triggered_by_identity_name"

      - name: mvn_build
        type: MvnBuild
        configuration:
          integrations:
            - name: {{ .jfrog-pipelines.localArtifactory }}
          inputResources:
            - name: {{ .Values.var.resourceName }}
          outputResources:
            - name: mvn_build_info
          mvnCommand: clean install
          forceXrayScan: false
          failOnScan: false
          autoPublishBuildInfo: true
        execution:
          onStart:
            - echo "Preparing for work..."
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
            - save_tests $res_src_repo_resourcePath/target/surefire-reports/