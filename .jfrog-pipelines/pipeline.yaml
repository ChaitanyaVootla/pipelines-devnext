---
valuesFilePath: ./values.yaml
resources:
  - name:
      "{ .Values.var.resourceName }": null
    type: GitRepo
    configuration:
      gitProvider:
        "{ .Values.var.gitProvider }": null
      path:
        "{ .Values.var.path }": null
      branches:
        include:
          "{ .Values.var.branches }": null
  - name: mvn_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory:
        "{ .Values.var.artifactory }": null
      buildName:
        "{ .Values.var.pipelineName }": null
      buildNumber: ${run_number}
pipelines:
  - name:
      "{ .Values.var.pipelineName }": null
    preRun:
      execution:
        onExecute:
          - echo "Executing Pre Run"
    postRun:
      execution:
        onExecute:
          - echo "Executing Post Run"
    configuration:
      nodePool: default-dynamic-nodepool
    steps:
      - name: sample_step
        type: Bash
        execution:
          onStart:
            - echo "Preparing for work..."
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete:
            - echo "Cleaning up some stuff"
            - set_run_name "v$run_number"
      - name: mvn_build
        type: MvnBuild
        configuration:
          integrations:
            - name:
                "{ .Values.var.artifactory }": null
          inputResources:
            - name:
                "{ .Values.var.resourceName }": null
          outputResources:
            - name: mvn_build_info
          mvnCommand: clean install
          forceXrayScan: false
          failOnScan: false
          autoPublishBuildInfo: true
        execution:
          onStart:
            - echo "Preparing for work..."
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete:
            - echo "Cleaning up some stuff"
            - save_tests $res_src_repo_resourcePath/target/surefire-reports/